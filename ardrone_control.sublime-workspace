{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"TRA",
				"TrajectoryPID"
			],
			[
				"_callc",
				"_calculate_output"
			],
			[
				"_calc",
				"_calculate_error"
			],
			[
				"new",
				"new_input"
			],
			[
				"TE",
				"TestQuadrotor"
			],
			[
				"ros",
				"rostest"
			],
			[
				"Te",
				"TestQuaternion"
			],
			[
				"cont",
				"continuous_systems"
			],
			[
				"pub",
				"pub_time"
			],
			[
				"sensor",
				"_sensors"
			],
			[
				"msg",
				"msg"
			],
			[
				"mag",
				"magnetometer"
			],
			[
				"true",
				"true_position"
			],
			[
				"omega_",
				"omega_y"
			],
			[
				"new_",
				"new_value"
			],
			[
				"_cont",
				"_controllers"
			],
			[
				"_contrll",
				"_controllers"
			],
			[
				"joys",
				"joysticks"
			],
			[
				"statu",
				"STATUS"
			],
			[
				"land",
				"LANDING"
			],
			[
				"Nav",
				"NavSatFix"
			],
			[
				"_publi",
				"_publish_fix"
			],
			[
				"ome",
				"omega_x"
			],
			[
				"n",
				"new_reference"
			],
			[
				"dummy_",
				"dummy_time_event"
			],
			[
				"comm",
				"command_reference"
			],
			[
				"Way",
				"WayPoints"
			],
			[
				"WA",
				"WAY_POINTS"
			],
			[
				"Th",
				"THRESHOLD"
			],
			[
				"state",
				"state_msg"
			],
			[
				"joyst",
				"joystick"
			],
			[
				"lef",
				"left_arrow"
			],
			[
				"righ",
				"right_arrow"
			],
			[
				"control",
				"control_off"
			],
			[
				"e",
				"Empty"
			],
			[
				"re",
				"recieve_state_msg"
			],
			[
				"last",
				"last_expected"
			],
			[
				"call",
				"Callback"
			],
			[
				"Qua",
				"QuadrotorState"
			],
			[
				"rot",
				"rotation_mat"
			],
			[
				"Quadr",
				"QuadrotorState"
			],
			[
				"qu",
				"QuadrotorState"
			],
			[
				"local",
				"local_to_global_rotation"
			],
			[
				"posi",
				"position_dict"
			],
			[
				"Qu",
				"QuadrotorState"
			],
			[
				"ardr",
				"ardrone_autonomy"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ardrone_controller/src/controller.py",
			"settings":
			{
				"buffer_size": 4383,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ardrone_lib/src/ardrone_lib/controllers.py",
			"settings":
			{
				"buffer_size": 5276,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ardrone_trajectory_generator/src/trajectory.py",
			"settings":
			{
				"buffer_size": 7896,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					"Primary Quick Build"
				],
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					"Choose Quick Build"
				],
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					"Clean up Files"
				]
			],
			[
				"Packages/LaTeXing/LaTeX.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"ROS Python",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"ROS Python",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 369.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"",
				"Build With: Python"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/sebascuri/catkin_ws/src/ardrone_control",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_sensor_fusion/src",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_trajectory_generator/src"
	],
	"file_history":
	[
		"/home/sebascuri/.pylintrc",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test_controllers.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/filters.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/controllers.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/controller.py",
		"/home/sebascuri/.config/sublime-text-3/Packages/Pylinter/Pylinter.sublime-settings",
		"/home/sebascuri/.config/sublime-text-3/Packages/User/Pylinter.sublime-settings",
		"/home/sebascuri/catkin_ws/devel/lib/python2.7/dist-packages/ardrone_lib/__init__.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/__init__.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_trajectory_generator/src/trajectory.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_sensor_fusion/src/sensor_fusion.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/src/simulator.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_sensor_fusion/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_trajectory_generator/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_trajectory_generator/test/test_ardrone_trajectory_generator.test",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_trajectory_generator/test/test_ardrone_trajectory_generator.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test_ardrone_lib.test",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/test/test_ardrone_simulator.test",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_sensor_fusion/test/test_ardrone_sensor_fusion.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/test/test_ardrone_controller.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/test/test_ardrone_controller.test",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/test/test_ardrone_simulator.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_sensor_fusion/test/test_ardrone_sensor_fusion.test",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test_filters.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test_sensors.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test_quadrotor.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test_quaternion.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test_ardrone_lib.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/test/test.py",
		"/home/sebascuri/catkin_ws/build/test_results/ardrone_controller/rostest-test_test_ardrone_controller.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/test/controller_test.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/test/test.y",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_control/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_msgs/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_sensor_fusion/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_trajectory_generator/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/launch/simulator.launch",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/launch/ardrone_control.launch",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/parameters/global_controller_params.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_control.sublime-project",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/quadrotor.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/joysticks.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/Filters.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/physics.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/basic_controller.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/sensor_fusion.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/trajectory.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/src/ardrone_lib/sensors.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_msgs/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_lib/setup.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/cd",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/src/ardrone_simulator/sensors.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/src/ardrone_simulator/physics.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/parameters/sim_parameters.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/src/ardrone_simulator/simulator.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/basic_controller.py",
		"/home/sebascuri/Dropbox/Coursera/Digital Signal Processing/Extra Reading/Signal Processing for Communications.webloc",
		"/home/sebascuri/Dropbox/Coursera/Digital Signal Processing/Numerical Examples/DigitalFilters/Leaky.c",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/parameters/sensors.yaml",
		"/opt/ros/indigo/share/ardrone_autonomy/launch/ardrone.launch",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/parameters/simulation_time.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/quadrotor.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/parameters/ideal_sensors.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/sensor_fusion.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller.sublime-project",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/quaternion.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/parameters/global_controller_params.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/controller.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/trajectory.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/parameters/time.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/joysticks.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/simulator.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller/keyboard.py",
		"/home/sebascuri/Downloads/QUACS/nodes/ardrone_control/lib/SensorFusion.py",
		"/home/sebascuri/Dropbox/ITBA/UAVsProyect/Code/ardrone_control/src/lib/Filter.py",
		"/home/sebascuri/Dropbox/ITBA/UAVsProyect/Code/ardrone_control/src/lib/Quaternion.py",
		"/home/sebascuri/Downloads/QUACS/nodes/ardrone_control/lib/Filter.py",
		"/home/sebascuri/Downloads/QUACS/nodes/ardrone_control/lib/Process.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/src/ardrone_simulator/simulator (copy).py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_simulator/setup.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/simulator.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/lib/basic_controller.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/lib/quadrotor.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/lib/joysticks.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/ardrone_controller.sublime-workspace",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/ardrone_control.sublime-project",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/ardrone_control.sublime-workspace",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/launch/ardrone_control_sim.launch",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/quadrotor.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/quaternion.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/src/__init__.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/__init__.py",
		"/home/sebascuri/Downloads/QUACS/nodes/ardrone_control/lib/BasicObject.py",
		"/home/sebascuri/Downloads/QUACS/nodes/ardrone_control/lib/Quadrotor.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/setup.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_python_lib/src/quadrotor.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_python_lib/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_python_lib/bin/hello.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_python_lib/setup.py",
		"/home/sebascuri/catkin_ws/src/tum_simulator/tum_simulator/package.xml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_control/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/ardrone_controller/pack",
		"/home/sebascuri/catkin_ws/src/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/.catkin_workspace",
		"/home/sebascuri/.bashrc",
		"/home/sebascuri/catkin_ws/src/tum_simulator/tum_simulator/CMakeLists.txt",
		"/home/sebascuri/catkin_ws/src/ardrone_control/launch/ardrone_control_sim.launch",
		"/home/sebascuri/catkin_ws/src/tum_simulator/cvg_sim_gazebo/launch/spawn_quadrotor.launch",
		"/home/sebascuri/catkin_ws/src/tum_simulator/cvg_sim_gazebo/launch/ardrone_testworld.launch",
		"/home/sebascuri/catkin_ws/src/ardrone_control/src/controller.py",
		"/home/sebascuri/catkin_ws/src/ardrone_control/parameters/PID_Parameters.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_control/parameters/Time.yaml",
		"/home/sebascuri/catkin_ws/src/ardrone_simulator/src/simulator.py",
		"/home/sebascuri/catkin_ws/src/ardrone_simulator/parameters/sensors.yaml",
		"/opt/ros/indigo/share/gazebo_ros/launch/empty_world.launch",
		"/home/sebascuri/catkin_ws/src/ardrone_simulator/parameters/noises.yaml",
		"/home/sebascuri/ros_stacks_ws/tum_simulator/cvg_sim_msgs/include/cvg_sim_msgs/RC/functions.h",
		"/home/sebascuri/ros_stacks_ws/tum_simulator/tum_simulator/CMakeLists.txt",
		"/home/sebascuri/ros_stacks_ws/tum_simulator/cvg_sim_gazebo/CMakeLists.txt",
		"/home/sebascuri/ros_stacks_ws/tum_simulator/message_to_tf/src/message_to_tf.cpp",
		"/home/sebascuri/ros_stacks_ws/tum_simulator/cvg_sim_gazebo/launch/empty_world.launch",
		"/home/sebascuri/ros_stacks_ws/tum_simulator/cvg_sim_gazebo/launch/spawn_quadrotor.launch"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"quadrotor",
			"path",
			"1",
			".],",
			"])",
			"get_qua",
			"_inver",
			"_conjug",
			"clone",
			"normalize",
			"calculate_error()",
			"self.calculate_error",
			"dot",
			"cos",
			"rospy.logi",
			"ardrone_con",
			"STATUS	",
			"quadrotor",
			"omega_x",
			"y ",
			"catkin_packag",
			"Controller",
			"TYPE",
			"controller",
			"STATUS",
			":\n",
			"state",
			"PI",
			"hbox"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ardrone_controller/src/controller.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4383,
						"regions":
						{
						},
						"selection":
						[
							[
								4000,
								4000
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 521.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ardrone_lib/src/ardrone_lib/controllers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5276,
						"regions":
						{
						},
						"selection":
						[
							[
								3842,
								3842
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 20.0,
						"translation.y": 1313.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ardrone_trajectory_generator/src/trajectory.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7896,
						"regions":
						{
						},
						"selection":
						[
							[
								557,
								557
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.778350515464,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 204.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "ardrone_control.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 336.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
